// <auto-generated />
using System;
using DBRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DBRepository.Migrations
{
    [DbContext(typeof(NaveenReddyDbContext))]
    [Migration("20211112141123_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DBRepository.AddressDetails", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("PersonId");

                    b.ToTable("AddressDetails");
                });

            modelBuilder.Entity("DBRepository.EducationDetails", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("College")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Graducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heightqualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EducationId");

                    b.HasIndex("PersonId");

                    b.ToTable("EducationDetails");
                });

            modelBuilder.Entity("DBRepository.FamilyDetails", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Brotheroccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fathername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fatheroccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mothername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motheroccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Noofbrothers")
                        .HasColumnType("int");

                    b.Property<int>("Noofsisters")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Sisteroccupation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FamilyId");

                    b.HasIndex("PersonId");

                    b.ToTable("FamilyDetails");
                });

            modelBuilder.Entity("DBRepository.PersonalInfo", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Complexion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dateofbirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emailid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Mobileno")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timeofbirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yourself")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("PersonalInfo");
                });

            modelBuilder.Entity("DBRepository.ReligiousDetails", b =>
                {
                    b.Property<int>("ReligiousId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Caste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gothram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherTongue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Raasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Star")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subcaste")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReligiousId");

                    b.HasIndex("PersonId");

                    b.ToTable("ReligiousDetails");
                });

            modelBuilder.Entity("DBRepository.AddressDetails", b =>
                {
                    b.HasOne("DBRepository.PersonalInfo", "PersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalInfo");
                });

            modelBuilder.Entity("DBRepository.EducationDetails", b =>
                {
                    b.HasOne("DBRepository.PersonalInfo", "PersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalInfo");
                });

            modelBuilder.Entity("DBRepository.FamilyDetails", b =>
                {
                    b.HasOne("DBRepository.PersonalInfo", "PersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalInfo");
                });

            modelBuilder.Entity("DBRepository.ReligiousDetails", b =>
                {
                    b.HasOne("DBRepository.PersonalInfo", "PersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
